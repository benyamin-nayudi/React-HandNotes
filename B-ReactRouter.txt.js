/*
$بخش اول :‌ریکت روتر دام . صفحات : Header , App , index , HomePage , AboutPage

/ React Router DOM
/ ریکت راوتر یکی از لایبرری های راوته و کارش کلاینت ساید راوتینگ هستش
/ client side routing
/ منظور ما ازین عبارت اینه که داخل وب سایت هدف ما اینه که بخوایم از یه صفحه بریم به صفحه دیگه، چیزی لود نشه و مستقیم بره تو پیج. برعکس این امر میشه سرور ساید راوتینگ. . کلاینت ساید راوتینگ یعنی یک بار اطلاعات رو از وب سرور میگیره و دیگه با سرور ارتباط نداره. کلا براوزر ما یک صفحع اچتمل رو میخونه که همه اطلاعات مام تو همونن که همون دیو روت منظورمونه
/ ریکت راوتر میاد یه سری راوت ها تعیین میکنه و به کامپوننت ها وصل میکنه و حرفش به اینصورته که میگه
/ (این کامپوننت رو برای این یو ار ال لود کن)
/ ریکت راوتر میاد اینتری پوینت رو رپ میکنه یعنی همون چیزایی که میخایم رندر بگیریم ازشون
/ مشخص میکنه که این کامپوننت رو برای این راوت میخام
/ و کار بعدیش لینک کردنه 
/ for installing you can use install npm react-router-dom
/ داخل دیپندنسی میشه دید نصب شده یا نه
/ انواع راوتر داریم که سه تان و میتونه چیزای مارو رپ کنه که هش راوتر برای توی سرور استفاده میشه 
/ برای اینکار باید اینپورت کنیم
/ import { BrowserRouter } from "react-router-dom"
/ کلا راوت میاد و کارش چک کردن یو ار ال هستش . یعنی وقتی روی یه ای تگ کلیک میکنیم و یو ار ال براوزر تغییر کرد روات میاد اون رو چک میکنه و برحسب اون یه پیج میاره بالا واسمون

/ لینک رو باید از روتر دام اول استخراج کنیم
/ import {Link} from "react-router-dom"
/ یه سری تبدیلات باید داشته باشیم. اول اینکه برای صفحاتی که مثلا عدد اخرشون متغییره . برای مثال صفحه
/    /USER/1  or   /USER/2 ...
/ این صحفات که فقط اخرشون متغییره میتونیم از دو نقطه استفاده کنیم و راوتشونو اینطوری بنویسیم
/ <Route path="/USER/:UserId" />
/برای بخش جی اس ایکس هم اینطوری ای لینک های ما تغییر خواهند کرد
/ jsx =>>>   <Link to="/USER/1"> benyamin </Link>
/ اکتیور کلس میاد کلاس اون لینکی که روش کلیک شده بهش یه استایل دیگه میده یعنی استایلشو اگه ترو باشه فالس میکنه تا با بقیه لینک ها تفاوت داشته باشه

/ قانون توی استفاده از ریکت روتر دام: اونی که دقیق تره اول خونده میشه . واسه همینه ما صفحه ۴۰۴ رو اخر میذاریم چون اصلا پث نداره


& Redirect 
& pages: App
& میاد یه لینکی که قبلا بوده رو اگه اومد توی قسمت یو ار ال براوزر میگیره و ریدایرکت میکنه به یه لینک دیگه که ما بهش میدیم
&  import {Redirect} from "react-router-dom"
& <Redirect from="/old-path" to="/new-path"/>
& وقتی ریدایرکت مینویسیم چون واسش لینکی ندادیم طبعا لود هم خواهیم داشت ولی اگه ادرس قبلی ای که بهش دادیم خودش به صورت لینک بود لود اینجا دیگه نداریم


$ url parameters . pages: App , CourseList , CoursePage 
برای مثال ما یه همچین چیزی داریم 
/ ۱) <Route path ="/course/:slug" component={Course}/> 

 و اینکه ما یه همچین یو ار الی هم داریم
/ =>   myapp.com/course/clean-code?module=3

 الان اینجا توی این یو ار ال ما دوتیکه داریم که دوتا اسم مشخص دسارن 
/ param => clean-code
/ query => module=3  (q= که به این صورت هم نوشته میشه)

 حالا برای دسترسی به هرکدوم از اینا اینطوریی عمل میکنیم
/ props.match.params.slug => clean-code
 در واقع ما اونجا توی بخش ۱ اومدیم و قسمت بعده کورس (که پارامز ما هستش) رو به عنوان اسلاگ قرار دادیم. پس برای اینکه به قسمت اسلاگ دسترسی پیدا کنیم از خط بالا استفاده میکنیمم. . ما اگه پراپس رو کنسول بگیریم این ابجکت میادش

 *console.log(props)==>
* {history: {…}, location: {…}, match: {…}, staticContext: undefined}
*history: {length: 50, action: "PUSH", location: {…}, createHref: ƒ, push: ƒ, …}
*location: {pathname: "/course/imd-1-js-1", search: "", hash: "", state: undefined, key: "0lwpjs"}
/ match: {path: "/course/:slug", url: "/course/imd-1-js-1", isExact: true, params: {…}}
* staticContext: undefined

که بخش متچ ان دارای یه قسمت به اسم پارامز هستش که توش این مقادیر هستن
* match:
* isExact: true
/ params: {slug: "imd-1-js-1"}
* path: "/course/:slug"
* url: "/course/imd-1-js-1"
حالا این اسلاگی که اینجاست از کجا اومده؟ این از همون بخش یک اومده که ما اونجا قسمت بعد کورس رو نوشتیم اسلاگ. اون به عنوان پارامز پاس داده شد به پراپس و ما اینجا میتونیم اونو بگیریم

برای دسترسی به بخش دوم یعنی بخش کوری باید از این روش استفاده کنیم
/ props.location.query  => module=3

و برای کل یو ار ال از این 
/ props.location.pathname



$prompt pages :  ManageCoursePage
یه ون داره که اگه ترو بشه این پرامپ میاد بالا. مثلا یه شرط مینویسیم بهش که اگه مثلا فرمی سیو نشده تو صفحه و یارو خواست بیاد بیرون این پرامپت کنه و یه چی نشون بده
/ <Prompt when={isBlocking} message="are you sure ?" />
البته باید اینم از ریکت روتر دام ایمپورتش کنیم. این بخش رو تو صفحه منیج کورس پیج استفاده کردیم

$ Forms pages: ManageCoursePage , courseList , CoursePage , TextInput , CourseForms
در این بخش ما تیبل رو پاس دادیم به بخش کورس لیست پس کل بخش تیبل رو از اول پایینش مینویسم. بعد بخش کورس رو که داریم روش مپ میکنیم به عنوان پراپس میدیم به کورس لیسته داخل کورس پیج
دوتا کامپوننت ساختیم که یکی کورس لیسته و یکی کورس فرم. 
کورس فرم رو توی منیج کورس پیج اینپورت کردیم
/ در ریکت فرم ها کنترل کامپوننت حساب میشن. یعنی هر اینپوتی توی ریکت کنترل کامپوننت بهش میگن و ولیو رو میخونه فقط . روی همون فقط کار میکنه پس هرچی ما به عنوان ولیو بهش بدیم همونو فقط میخونه
 */